<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="16" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="106126" started-at="2020-04-19T12:21:30 EET" finished-at="2020-04-19T12:23:16 EET">
    <groups>
    </groups>
    <test name="LogosTest" duration-ms="25022" started-at="2020-04-19T12:21:30 EET" finished-at="2020-04-19T12:21:55 EET">
      <class name="alphaPackage.MultiLogoTest">
        <test-method status="PASS" signature="init()[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="init" is-config="true" duration-ms="20288" started-at="2020-04-19T12:21:30 EET" finished-at="2020-04-19T12:21:50 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="72" started-at="2020-04-19T12:21:50 EET" data-provider="getData" finished-at="2020-04-19T12:21:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[IBM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="46" started-at="2020-04-19T12:21:50 EET" data-provider="getData" finished-at="2020-04-19T12:21:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[University of Illinois at Urbana-Champaign]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="38" started-at="2020-04-19T12:21:50 EET" data-provider="getData" finished-at="2020-04-19T12:21:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Duke University]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="36" started-at="2020-04-19T12:21:50 EET" data-provider="getData" finished-at="2020-04-19T12:21:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="44" started-at="2020-04-19T12:21:50 EET" data-provider="getData" finished-at="2020-04-19T12:21:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[University of Michigan]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="42" started-at="2020-04-19T12:21:51 EET" data-provider="getData" finished-at="2020-04-19T12:21:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Imperial College of London]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="59" started-at="2020-04-19T12:21:51 EET" data-provider="getData" finished-at="2020-04-19T12:21:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stanford University]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="logoTest(java.lang.String)[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="logoTest" duration-ms="40" started-at="2020-04-19T12:21:51 EET" data-provider="getData" finished-at="2020-04-19T12:21:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[University of Pennsylvania]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoTest -->
        <test-method status="PASS" signature="end()[pri:0, instance:alphaPackage.MultiLogoTest@1e397ed7]" name="end" is-config="true" duration-ms="4315" started-at="2020-04-19T12:21:51 EET" finished-at="2020-04-19T12:21:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- alphaPackage.MultiLogoTest -->
    </test> <!-- LogosTest -->
    <test name="LoginTest" duration-ms="21954" started-at="2020-04-19T12:21:55 EET" finished-at="2020-04-19T12:22:17 EET">
      <class name="alphaPackage.CourseraLoginTest">
        <test-method status="PASS" signature="init()[pri:0, instance:alphaPackage.CourseraLoginTest@38d8f54a]" name="init" is-config="true" duration-ms="5353" started-at="2020-04-19T12:21:55 EET" finished-at="2020-04-19T12:22:00 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="goToHomePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:alphaPackage.CourseraLoginTest@38d8f54a]" name="goToHomePage" duration-ms="7131" started-at="2020-04-19T12:22:00 EET" data-provider="getData" finished-at="2020-04-19T12:22:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[sara@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password5123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Testcase execution No.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToHomePage -->
        <test-method status="PASS" signature="goToHomePage(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:alphaPackage.CourseraLoginTest@38d8f54a]" name="goToHomePage" duration-ms="5112" started-at="2020-04-19T12:22:08 EET" data-provider="getData" finished-at="2020-04-19T12:22:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[saranmaher@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1/2/3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Testcase execution No.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToHomePage -->
        <test-method status="PASS" signature="end()[pri:0, instance:alphaPackage.CourseraLoginTest@38d8f54a]" name="end" is-config="true" duration-ms="4355" started-at="2020-04-19T12:22:13 EET" finished-at="2020-04-19T12:22:17 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- alphaPackage.CourseraLoginTest -->
    </test> <!-- LoginTest -->
    <test name="FooterLinksTest" duration-ms="38230" started-at="2020-04-19T12:22:17 EET" finished-at="2020-04-19T12:22:55 EET">
      <class name="alphaPackage.FooterLinksTest">
        <test-method status="PASS" signature="init()[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="init" is-config="true" duration-ms="14143" started-at="2020-04-19T12:22:17 EET" finished-at="2020-04-19T12:22:31 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="footerLinkTest(java.lang.String)[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="footerLinkTest" duration-ms="4307" started-at="2020-04-19T12:22:31 EET" data-provider="getData" finished-at="2020-04-19T12:22:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[facebook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerLinkTest -->
        <test-method status="PASS" signature="footerLinkTest(java.lang.String)[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="footerLinkTest" duration-ms="4199" started-at="2020-04-19T12:22:35 EET" data-provider="getData" finished-at="2020-04-19T12:22:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[linkedin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerLinkTest -->
        <test-method status="PASS" signature="footerLinkTest(java.lang.String)[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="footerLinkTest" duration-ms="4481" started-at="2020-04-19T12:22:40 EET" data-provider="getData" finished-at="2020-04-19T12:22:44 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[twitter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerLinkTest -->
        <test-method status="PASS" signature="footerLinkTest(java.lang.String)[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="footerLinkTest" duration-ms="5850" started-at="2020-04-19T12:22:44 EET" data-provider="getData" finished-at="2020-04-19T12:22:50 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[youtube]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerLinkTest -->
        <test-method status="PASS" signature="footerLinkTest(java.lang.String)[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="footerLinkTest" duration-ms="4222" started-at="2020-04-19T12:22:50 EET" data-provider="getData" finished-at="2020-04-19T12:22:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[instagram]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerLinkTest -->
        <test-method status="PASS" signature="end()[pri:0, instance:alphaPackage.FooterLinksTest@18078bef]" name="end" is-config="true" duration-ms="1023" started-at="2020-04-19T12:22:54 EET" finished-at="2020-04-19T12:22:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- alphaPackage.FooterLinksTest -->
    </test> <!-- FooterLinksTest -->
    <test name="TitleTest" duration-ms="20857" started-at="2020-04-19T12:22:55 EET" finished-at="2020-04-19T12:23:16 EET">
      <class name="alphaPackage.TitleValidationTest">
        <test-method status="PASS" signature="init()[pri:0, instance:alphaPackage.TitleValidationTest@2a65fe7c]" name="init" is-config="true" duration-ms="15733" started-at="2020-04-19T12:22:55 EET" finished-at="2020-04-19T12:23:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="validateTitle()[pri:0, instance:alphaPackage.TitleValidationTest@2a65fe7c]" name="validateTitle" duration-ms="37" started-at="2020-04-19T12:23:11 EET" finished-at="2020-04-19T12:23:11 EET">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at alphaPackage.TitleValidationTest.validateTitle(TitleValidationTest.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitle -->
        <test-method status="PASS" signature="end()[pri:0, instance:alphaPackage.TitleValidationTest@2a65fe7c]" name="end" is-config="true" duration-ms="4325" started-at="2020-04-19T12:23:12 EET" finished-at="2020-04-19T12:23:16 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- alphaPackage.TitleValidationTest -->
    </test> <!-- TitleTest -->
  </suite> <!-- Suite -->
</testng-results>
